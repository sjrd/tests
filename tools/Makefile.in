BUILDTOP	= @BUILDTOP@
VPATH		= @srcdir@
SRCDIR		= @srcdir@
SRCTOP		= @SRCTOP@

PREFIX		= @prefix@

OZBIN		= $(PREFIX)/bin
OZTOOLS		= $(PREFIX)/share
OZPATH		= .:$(PREFIX)/share
IMAGESDIR	= $(OZTOOLS)/images

SHELL		= /bin/sh

INSTALL		= @INSTALL@
INSTALL_FILE	= $(INSTALL) -m 444
INSTALL_BIN	= $(INSTALL) -m 555
INSTALL_DIR	= @INSTALL_DIR@

OZFLAGS		= 
OZC		= @OZC@
OZAR		= @OZAR@
LN_S		= @LN_S@

COMPILE		= $(OZC) $(OZFLAGS) -c

COMPILERPANELSRC1 = \
	CompilerPanelClass.oz
COMPILERPANELSRC = $(COMPILERPANELSRC1:%=compilerPanel/%) CompilerPanel.oz

PANELSRC1 = \
	configure.oz load.oz make-notes.oz runtime-bar.oz top.oz \
	main.oz dialogs.oz errors.oz
PANELSRC = $(PANELSRC1:%=panel/%) Panel.oz

BROWSERSRC1 = \
	XResources.oz browserObject.oz browserTerm.oz \
	bufsAndStreams.oz constants.oz controlObject.oz core.oz \
	errors.oz managerObject.oz reflect.oz repManager.oz \
	store.oz tcl-interface.oz termObject.oz \
	termsStore.oz undefs.oz windowManager.oz
BROWSERSRC = $(BROWSERSRC1:%=browser/%) Browser.oz

EXPLORERSRC1 = \
	main.oz misc.oz action-nodes.oz hide-nodes.oz \
	layout-nodes.oz manager.oz \
	menu-manager.oz move-nodes.oz tk-nodes.oz \
	configure-static.oz configure-dynamic.oz \
	combine-nodes.oz nodes.oz toplevel-manager.oz \
	default-actions.oz search-nodes.oz stat-nodes.oz \
	statistics-balloon.oz \
	dialog-manager.oz shapes-and-images.oz status-manager.oz \
	errors.oz
EXPLORERSRC = $(EXPLORERSRC1:%=explorer/%) Explorer.oz

EMACSSRC = Emacs.oz

OZCARSRC1 = \
	prelude.oz string.oz tk.oz config.oz help.oz tree.oz thread.oz \
	stack.oz source.oz menu.oz dialog.oz gui.oz ozcar.oz
OZCARSRCNOVER = $(OZCARSRC1:%=ozcar/%) Ozcar.oz
OZCARSRC = $(OZCARSRCNOVER) ozcar-version.oz

OZCARIMAGESDIR = $(IMAGESDIR)/ozcar
OZCARIMAGES1 = \
	step.xbm next.xbm unleash.xbm stop.xbm detach.xbm term.xbm 
OZCARIMAGES = $(OZCARIMAGES1:%=$(OZCARIMAGESDIR)/%)

PROFILERSRC1 = \
	prof-gui.oz prof-prelude.oz prof-tk.oz \
	prof-config.oz prof-help.oz profiler.oz \
	prof-dialog.oz prof-menu.oz prof-string.oz
PROFILERSRC = $(PROFILERSRC1:%=profiler/%) Profiler.oz

GUMPSRC1 = Bison.oz Main.oz Output.oz ParserGenerator.oz ScannerGenerator.oz
GUMPSRC = $(GUMPSRC1:%=gump/%) Gump.oz

GUMPSCANNERSRC1 = GumpScannerClass.oz Errors.oz
GUMPSCANNERSRC = $(GUMPSCANNERSRC1:%=gump/%) GumpScanner.oz

GUMPPARSERSRC1 = GumpParserClass.oz
GUMPPARSERSRC = $(GUMPPARSERSRC1:%=gump/%) GumpParser.oz

PRODUCTIONTEMPLATESSRC1 = ProductionTemplates.ozg
PRODUCTIONTEMPLATESSRC = $(PRODUCTIONTEMPLATESSRC1:%=gump/%) \
	ProductionTemplates.oz

GUMPEXAMPLES = \
	Examples.oz Lambda.in LambdaParser.ozg LambdaScanner.ozg \
	OzParser.ozg OzScanner.ozg

INSPECTORSRC1 = \
	InspectorOptions.oz InspectorMain.oz
INSPECTORSRC2 = \
	SupportNodes.oz CreateObjects.oz LayoutObjects.oz DrawObjects.oz \
	TreeNodes.oz StoreListener.oz CycleManager.oz TreeWidget.oz
INSPECTORSRC = $(INSPECTORSRC1:%=inspector/%) \
	$(INSPECTORSRC2:%=inspector/TreeWidget/%)

INSPECTOROBJS = \
	InspectorMain.ozf InspectorOptions.ozf \
	SupportNodes.ozf CreateObjects.ozf LayoutObjects.ozf DrawObjects.ozf \
	TreeNodes.ozf StoreListener.ozf CycleManager.ozf TreeWidget.ozf

INSPECTORIMAGESDIR = $(IMAGESDIR)/inspector
INSPECTORIMAGES1 = \
	depth.xbm width.xbm
INSPECTORIMAGES = $(INSPECTORIMAGES1:%=$(INSPECTORIMAGESDIR)/%)

TOOLSDIRS1 = gump gump/examples
TOOLSDIRS = $(TOOLSDIRS1:%=$(OZTOOLS)/%)

TOOLSFILES = \
	$(GUMPEXAMPLES:%=$(OZTOOLS)/gump/examples/%)

FUNCTORS = \
	CompilerPanel.ozf Panel.ozf Browser.ozf Explorer.ozf Emacs.ozf \
	Ozcar.ozf Profiler.ozf Gump.ozf GumpScanner.ozf GumpParser.ozf \
	ProductionTemplates.ozf OPI.ozf Inspector.ozf

TOOLSFUNCTORS = $(FUNCTORS:%=$(OZTOOLS)/%)

IMAGES1 = \
	compiler.xbm compilermask.xbm \
	lines-lr.xbm lines-rl.xbm grid-25.xbm grid-50.xbm \
	browserMIcon.xbm browserIcon.xbm stop.xbm
IMAGES = $(IMAGES1:%=$(IMAGESDIR)/%)


.PHONY: all install bootstrap check depend
.PHONY: install-main install-images install-cache
.PHONY: clean veryclean distclean tags
.PHONY: stage1

all: Makefile $(FUNCTORS)

include $(SRCTOP)/share/Makefile.boot

bootstrap: boot-all

#---------------------------------------------------------------------
# Components
#---------------------------------------------------------------------

%.ozf: %.oz
	$(COMPILE) $< -o $@

OPI.ozf: OPI.oz ../functor-defaults.oz

CompilerPanel.ozf: $(COMPILERPANELSRC) ../url-defaults.oz

Panel.ozf: $(PANELSRC) ../url-defaults.oz

Browser.ozf: $(BROWSERSRC) ../url-defaults.oz

Explorer.ozf: $(EXPLORERSRC)

Emacs.ozf: $(EMACSSRC)

ozcar-version.oz: $(OZCARSRCNOVER)
	echo \'`date '+%b %d %H:%M'`\' > $@

Ozcar.ozf: $(OZCARSRC) ../url-defaults.oz

Profiler.ozf: $(PROFILERSRC)

Gump.ozf: $(GUMPSRC) $(SRCTOP)/share/lib/compiler/TupleSyntax.oz \
	$(SRCTOP)/share/lib/compiler/FormatStrings.oz

GumpScanner.ozf: $(GUMPSCANNERSRC)

GumpParser.ozf: $(GUMPPARSERSRC)

ProductionTemplates.ozf: $(PRODUCTIONTEMPLATESSRC)
	$(COMPILE) -l Compiler ProductionTemplates.oz -o $@

Inspector.ozf: $(INSPECTOROBJS)
	$(OZAR) --verbose --nosequential --in=InspectorMain.ozf --out=$@

%.ozf: inspector/%.oz
	$(COMPILE) $< -o $@

%.ozf: inspector/TreeWidget/%.oz
	$(COMPILE) $< -o $@

#---------------------------------------------------------------------
# Installation
#---------------------------------------------------------------------

install: install-main install-images install-cache

install-main: all \
	$(OZTOOLS) $(TOOLSDIRS) $(TOOLSFILES) $(TOOLSFUNCTORS)

install-images: \
	$(IMAGESDIR) $(IMAGES) $(OZCARIMAGESDIR) $(OZCARIMAGES) \
	$(INSPECTORIMAGESDIR) $(INSPECTORIMAGES)

$(OZTOOLS) $(TOOLSDIRS) $(IMAGESDIR) $(OZCARIMAGESDIR) $(INSPECTORIMAGESDIR):
	$(INSTALL_DIR) $@

$(OZTOOLS)/%.oz: %.oz
	$(INSTALL_FILE) $< $@

$(OZTOOLS)/%.ozf: %.ozf
	$(INSTALL_FILE) $< $@

$(OZTOOLS)/gump/examples/%: gump/examples/%
	$(INSTALL_FILE) $< $@

$(IMAGESDIR)/%: images/%
	$(INSTALL_FILE) $< $@

$(OZCARIMAGESDIR)/%: ozcar/images/%
	$(INSTALL_FILE) $< $@

$(INSPECTORIMAGESDIR)/%: inspector/images/%
	$(INSTALL_FILE) $< $@

CACHEDIR  = $(PREFIX)/cache/http/www.ps.uni-sb.de
CACHELINK = $(CACHEDIR)/ozhome

install-cache: $(CACHEDIR) $(CACHELINK)

$(CACHEDIR):
	$(INSTALL_DIR) $(CACHEDIR)

$(CACHELINK): $(CACHEDIR)
	rm -f $(CACHELINK)
	$(LN_S)  $(PREFIX) $(CACHELINK)

#---------------------------------------------------------------------
# Cleaning up
#---------------------------------------------------------------------

clean:
	rm -f *~ *.bak ./*/*~ ./*/*/*~ ./*/*.bak ./*/*/*.bak
	rm -f ozcar-version.oz
	rm -f $(FUNCTORS)
	rm -f opi

veryclean: clean
	rm -f -r $(STAGE1) TAGS

distclean: veryclean
	@echo To really make distclean, please use \"cd ..\; make distclean\".

#---------------------------------------------------------------------
# Testing Components Locally
#---------------------------------------------------------------------

Makefile: Makefile.in ../config.status
	cd .. && ./config.status

../config.status: ../configure
	cd .. && ./config.status --recheck

STAGE1=./stage1

# stage1: create the components using the installed ones
stage1:
	$(MAKE) install-main PREFIX=$(STAGE1)

check:

depend:
